{"remainingRequest":"C:\\Users\\User\\cs260\\260_Labs\\lab_4_museum\\front-end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\User\\cs260\\260_Labs\\lab_4_museum\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\cs260\\260_Labs\\lab_4_museum\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\cs260\\260_Labs\\lab_4_museum\\front-end\\src\\views\\Admin.vue?vue&type=template&id=54c38a05&scoped=true&","dependencies":[{"path":"C:\\Users\\User\\cs260\\260_Labs\\lab_4_museum\\front-end\\src\\views\\Admin.vue","mtime":1649471956583},{"path":"C:\\Users\\User\\cs260\\260_Labs\\lab_4_museum\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649383827775},{"path":"C:\\Users\\User\\cs260\\260_Labs\\lab_4_museum\\front-end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1649383839902},{"path":"C:\\Users\\User\\cs260\\260_Labs\\lab_4_museum\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649383827775},{"path":"C:\\Users\\User\\cs260\\260_Labs\\lab_4_museum\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1649383837041}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}